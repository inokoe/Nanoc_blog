{
    "version": "https://jsonfeed.org/version/1",
    "title": "Nanoc",
    "description": "",
    "home_page_url": "https://nanoc.work",
    "feed_url": "https://nanoc.work/feed.json",
    "user_comment": "",
    "author": {
        "name": "Nanoc"
    },
    "items": [
        {
            "id": "https://nanoc.work/windowsshou-dong-an-zhuang-qu-dong/",
            "url": "https://nanoc.work/windowsshou-dong-an-zhuang-qu-dong/",
            "title": "Windows手动安装驱动",
            "summary": "对于一些OEM驱动提供的是压缩文件，且解压展示为.inf文件来说，手动安装驱动时候，使用iigd_dch.inf即可。",
            "content_html": "<p>对于一些OEM驱动提供的是压缩文件，且解压展示为.inf文件来说，手动安装驱动时候，使用<span style=\"color: #ba372a;\">iigd_dch.inf</span>即可。</p>\n<figure class=\"post__image\"><img loading=\"lazy\"  src=\"https://nanoc.work/media/posts/184/inf.png\" sizes=\"(min-width: 61.3125em) 50vw, 100vw\" srcset=\"https://nanoc.work/media/posts/184/responsive/inf-xs.png 300w ,https://nanoc.work/media/posts/184/responsive/inf-sm.png 480w ,https://nanoc.work/media/posts/184/responsive/inf-md.png 768w\"  alt=\"\" width=\"1292\" height=\"1055\"></figure>",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Windows"
            ],
            "date_published": "2022-05-20T11:00:36+08:00",
            "date_modified": "2022-05-20T11:00:56+08:00"
        },
        {
            "id": "https://nanoc.work/how-to-watch-netflix-4k-with-edge-2/",
            "url": "https://nanoc.work/how-to-watch-netflix-4k-with-edge-2/",
            "title": "How to watch netflix 4k with Edge",
            "summary": "4k screen is necessary A 4K resolution screen is required. Make sure your screen resolution is 3840x2160. In this step you need to open: edge://flags/ and search ready,you will see the option PlayReady DRM for Windows make sure is Enabled. You need to install hevc&hellip;",
            "content_html": "<h2 id=\"4k-screen-is-necessary\">4k screen is necessary</h2>\n<p>A 4K resolution screen is required. Make sure your screen resolution is 3840x2160.</p>\n<h2 id=\"setting-edge\">Setting Edge</h2>\n<p>In this step you need to open:</p>\n<pre><code>edge://flags/\n</code></pre>\n<p>and search <code>ready</code>,you will see the option <code>PlayReady DRM for Windows</code> make sure is <code>Enabled</code>.</p>\n<h2 id=\"install-hevc\">Install HEVC</h2>\n<p>You need to install hevc video expansion from Microsoft Store. \nHEVC is a crucial expansion.</p>\n<h2 id=\"check-you-netflix\">Check you Netflix</h2>\n<p>Make sure your package supports and enables 4K playback.</p>\n<h2 id=\"now-you-success\">Now, you success</h2>\n<p>Just restart Edge, and open Netflix you will see 4k label.</p>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Windows"
            ],
            "date_published": "2022-05-14T09:35:36+08:00",
            "date_modified": "2022-05-14T09:35:50+08:00"
        },
        {
            "id": "https://nanoc.work/docker-ji-chu-ming-ling-2/",
            "url": "https://nanoc.work/docker-ji-chu-ming-ling-2/",
            "title": "Docker 基础命令",
            "summary": "Docker基础命令",
            "content_html": "\n  <p>\n    Docker基础命令\n  </p>\n\n  <div  class=\"gallery-wrapper\">\n    <div class=\"gallery\" data-columns=\"3\">\n      <figure class=\"gallery__item\">\n      <a href=\"https://nanoc.work/media/posts/181/gallery/1-2.png\" data-size=\"502x557\">\n        <img loading=\"lazy\" src=\"https://nanoc.work/media/posts/181/gallery/1-2-thumbnail.png\" height=\"557\" width=\"502\" alt=\"\" />\n      </a>\n      \n    </figure><figure class=\"gallery__item\">\n      <a href=\"https://nanoc.work/media/posts/181/gallery/2-2.png\" data-size=\"1361x567\">\n        <img loading=\"lazy\" src=\"https://nanoc.work/media/posts/181/gallery/2-2-thumbnail.png\" height=\"320\" width=\"768\" alt=\"\" />\n      </a>\n      \n    </figure><figure class=\"gallery__item\">\n      <a href=\"https://nanoc.work/media/posts/181/gallery/3-2.png\" data-size=\"1440x562\">\n        <img loading=\"lazy\" src=\"https://nanoc.work/media/posts/181/gallery/3-2-thumbnail.png\" height=\"300\" width=\"768\" alt=\"\" />\n      </a>\n      \n    </figure><figure class=\"gallery__item\">\n      <a href=\"https://nanoc.work/media/posts/181/gallery/4-2.png\" data-size=\"959x557\">\n        <img loading=\"lazy\" src=\"https://nanoc.work/media/posts/181/gallery/4-2-thumbnail.png\" height=\"446\" width=\"768\" alt=\"\" />\n      </a>\n      \n    </figure>\n    </div>\n  </div>\n\n  <p>\n    \n  </p>",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Docker"
            ],
            "date_published": "2022-05-02T15:43:27+08:00",
            "date_modified": "2022-05-02T15:46:21+08:00"
        },
        {
            "id": "https://nanoc.work/open-crontab-log/",
            "url": "https://nanoc.work/open-crontab-log/",
            "title": "开启Crontab日志",
            "summary": "modify config # vi /etc/rsyslog.conf 将 #cron.* /var/log/cron.log 变为 cron.* /var/log/cron.log Restart service # /etc/init.d/rsyslog restart 环境变量以及参考 https://www.cnblogs.com/yinkh/p/5757849.html https://www.cnblogs.com/grefr/p/6095013.html",
            "content_html": "<h2 id=\"modify-config\">modify config</h2>\n<pre><code># vi /etc/rsyslog.conf\n</code></pre>\n<p>将</p>\n<pre><code>#cron.* /var/log/cron.log\n</code></pre>\n<p>变为</p>\n<pre><code>cron.* /var/log/cron.log\n</code></pre>\n<h2 id=\"restart-service\">Restart service</h2>\n<pre><code># /etc/init.d/rsyslog restart\n</code></pre>\n<h2 id=\"环境变量以及参考\">环境变量以及参考</h2>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/yinkh/p/5757849.html\">https://www.cnblogs.com/yinkh/p/5757849.html</a>\n<a href=\"https://www.cnblogs.com/grefr/p/6095013.html\">https://www.cnblogs.com/grefr/p/6095013.html</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Linux"
            ],
            "date_published": "2022-03-01T20:27:50+08:00",
            "date_modified": "2022-03-01T21:06:18+08:00"
        },
        {
            "id": "https://nanoc.work/openwrt-ge-shi-hua-upanying-pan/",
            "url": "https://nanoc.work/openwrt-ge-shi-hua-upanying-pan/",
            "title": "Openwrt 格式化U盘、硬盘",
            "summary": "安装软件 opkg update opkg install e4fsprogs lsblk 查看硬盘命令 df -h ls /dev/sd* lsblk 格式化 确定硬盘符后 mkfs.ext4 /dev/xxx 其他参考 https://www.cnblogs.com/clphp/p/6399119.html https://openwrt.org/packages/pkgdata/lsblk",
            "content_html": "<h2 id=\"安装软件\">安装软件</h2>\n<pre><code>opkg update\nopkg install e4fsprogs lsblk\n</code></pre>\n<h2 id=\"查看硬盘命令\">查看硬盘命令</h2>\n<pre><code>df -h\nls /dev/sd*\nlsblk\n</code></pre>\n<h2 id=\"格式化\">格式化</h2>\n<p>确定硬盘符后</p>\n<pre><code>mkfs.ext4 /dev/xxx\n</code></pre>\n<h2 id=\"其他参考\">其他参考</h2>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/clphp/p/6399119.html\">https://www.cnblogs.com/clphp/p/6399119.html</a>\n<a href=\"https://openwrt.org/packages/pkgdata/lsblk\">https://openwrt.org/packages/pkgdata/lsblk</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Linux"
            ],
            "date_published": "2022-02-26T12:56:49+08:00",
            "date_modified": "2022-02-26T12:56:54+08:00"
        },
        {
            "id": "https://nanoc.work/github-action-self-hosted-pei-zhi-wen-ti/",
            "url": "https://nanoc.work/github-action-self-hosted-pei-zhi-wen-ti/",
            "title": "Github Action Self hosted 配置问题",
            "summary": "Must not run with sudo 您可以通过创建用户来解决或者如下: 修改 ./config.sh 内容 vi ./config.sh 删除这部分 if [ $user_id -eq 0 -a -z &quot;$AGENT_ALLOW_RUNASROOT&quot; ]; then echo &quot;Must not run with sudo&quot; exit 1 fi 或者在命令前部添加： RUNNER_ALLOW_RUNASROOT=&quot;1&quot; 参考 https://stackoverflow.com/questions/66085793/must-not-run-with-sudo# https://www.cnblogs.com/mingyanzhen/p/11361207.html https://bit.ly/3IqkOKW 参考 https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/ https://github.com/actions/setup-python/issues/92 https://github.com/actions/setup-python/issues/96",
            "content_html": "<h2 id=\"must-not-run-with-sudo\">Must not run with sudo</h2>\n<p>您可以通过创建用户来解决或者如下:</p>\n<blockquote>\n<p>修改 ./config.sh 内容</p>\n</blockquote>\n<pre><code>vi ./config.sh\n</code></pre>\n<p>删除这部分</p>\n<pre><code>if [ $user_id -eq 0 -a -z &quot;$AGENT_ALLOW_RUNASROOT&quot; ]; then\n    echo &quot;Must not run with sudo&quot;\n    exit 1\nfi\n</code></pre>\n<p>或者在命令前部添加：</p>\n<pre><code>RUNNER_ALLOW_RUNASROOT=&quot;1&quot; \n</code></pre>\n<p>参考</p>\n<blockquote>\n<p><a href=\"https://stackoverflow.com/questions/66085793/must-not-run-with-sudo#\">https://stackoverflow.com/questions/66085793/must-not-run-with-sudo#</a>\n<a href=\"https://www.cnblogs.com/mingyanzhen/p/11361207.html\">https://www.cnblogs.com/mingyanzhen/p/11361207.html</a>\n<a href=\"https://bit.ly/3IqkOKW\">https://bit.ly/3IqkOKW</a></p>\n</blockquote>\n<h2 id=\"version-3x-with-arch-x64-not-found\">Version 3.x with arch x64 not found</h2>\n<p>参考</p>\n<blockquote>\n<p><a href=\"https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/\">https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/</a><br><a href=\"https://github.com/actions/setup-python/issues/92\">https://github.com/actions/setup-python/issues/92</a><br><a href=\"https://github.com/actions/setup-python/issues/96\">https://github.com/actions/setup-python/issues/96</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Linux"
            ],
            "date_published": "2022-02-26T12:25:47+08:00",
            "date_modified": "2022-03-08T21:48:55+08:00"
        },
        {
            "id": "https://nanoc.work/github-action-zhi-xing-wan-bi-gitdao-cang-ku/",
            "url": "https://nanoc.work/github-action-zhi-xing-wan-bi-gitdao-cang-ku/",
            "title": "Github Action 执行完毕GIT到仓库",
            "summary": "公开仓库 - uses: actions/checkout@v2 with: ref: main token: ${{ secrets.token }} 若是私人仓库 你需要先创建属于你的github token，并设置为Actions secrets。 然后这样使用 - uses: actions/checkout@v2 with: ref: main token: ${{ secrets.token }} 当程序执行完毕 若文件已经更改，这样可以GIT到仓库 - name: Commit files uses: stefanzweifel/git-auto-commit-action@v4 with: commit_message: Action Commit push_options: --force 完整示例 name: &#39;test&#39; on: #&hellip;",
            "content_html": "<h2 id=\"公开仓库\">公开仓库</h2>\n<pre><code>      - uses: actions/checkout@v2\n        with:\n          ref: main\n          token: ${{ secrets.token }}\n</code></pre>\n<h2 id=\"若是私人仓库\">若是私人仓库</h2>\n<p>你需要先创建属于你的github token，并设置为Actions secrets。\n然后这样使用</p>\n<pre><code>      - uses: actions/checkout@v2\n        with:\n          ref: main\n          token: ${{ secrets.token }}\n</code></pre>\n<h2 id=\"当程序执行完毕\">当程序执行完毕</h2>\n<p>若文件已经更改，这样可以GIT到仓库</p>\n<pre><code>      - name: Commit files\n        uses: stefanzweifel/git-auto-commit-action@v4\n        with:\n          commit_message: Action Commit\n          push_options: --force\n</code></pre>\n<h2 id=\"完整示例\">完整示例</h2>\n<pre><code>name: &#39;test&#39;\non:\n  # push:\n  #   branches:\n  #     - main\n  workflow_dispatch:\n  schedule:\n    - cron: &#39;0 */3 * * *&#39;\njobs:\n  build:\n    runs-on: ubuntu-latest\n    steps:\n      - uses: actions/checkout@v2\n        with:\n          ref: main\n          token: ${{ secrets.token }}\n      - name: Setup Python\n        uses: actions/setup-python@v2\n      - name: Run Python\n        run: python test.py\n      - name: Commit files\n        uses: stefanzweifel/git-auto-commit-action@v4\n        with:\n          commit_message: Action Commit\n          push_options: --force\n</code></pre>\n<h2 id=\"文档\">文档</h2>\n<blockquote>\n<p><a href=\"https://github.com/stefanzweifel/git-auto-commit-action\">https://github.com/stefanzweifel/git-auto-commit-action</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Github"
            ],
            "date_published": "2022-02-23T16:46:46+08:00",
            "date_modified": "2022-02-23T16:49:04+08:00"
        },
        {
            "id": "https://nanoc.work/python-telegram-ku/",
            "url": "https://nanoc.work/python-telegram-ku/",
            "title": "Python Telegram 库",
            "summary": "Python html to telegra.ph poster https://pypi.org/project/html-telegraph-poster/ Simple python function to post plain html text to https://telegra.ph/. Telegra.ph allows &lt;a&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;em&gt;, &lt;figure&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;img&gt;, &lt;p&gt;, &lt;strong&gt;, elements. It also supports embedded youtube and vimeo iframe tags.",
            "content_html": "<h2 id=\"python-html-to-telegraph-poster\">Python html to telegra.ph poster</h2>\n<blockquote>\n<p><a href=\"https://pypi.org/project/html-telegraph-poster/\">https://pypi.org/project/html-telegraph-poster/</a></p>\n</blockquote>\n<pre><code>Simple python function to post plain html text to https://telegra.ph/. Telegra.ph allows &lt;a&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;em&gt;, &lt;figure&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;img&gt;, &lt;p&gt;, &lt;strong&gt;, elements. It also supports embedded youtube and vimeo iframe tags.\n</code></pre>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Python"
            ],
            "date_published": "2022-02-23T15:14:04+08:00",
            "date_modified": "2022-02-23T15:22:19+08:00"
        },
        {
            "id": "https://nanoc.work/python-wang-pan-fen-xiang-xia-zai-ku/",
            "url": "https://nanoc.work/python-wang-pan-fen-xiang-xia-zai-ku/",
            "title": "Python 网盘分享下载库",
            "summary": "Only ondrive https://pypi.org/project/onedrivedownloader/ https://pypi.org/project/cloud-downloader-equitania/",
            "content_html": "<h2 id=\"only-ondrive\">Only ondrive</h2>\n<blockquote>\n<p><a href=\"https://pypi.org/project/onedrivedownloader/\">https://pypi.org/project/onedrivedownloader/</a></p>\n</blockquote>\n<h2 id=\"onedrive-and-others\">Onedrive and others</h2>\n<blockquote>\n<p><a href=\"https://pypi.org/project/cloud-downloader-equitania/\">https://pypi.org/project/cloud-downloader-equitania/</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Python"
            ],
            "date_published": "2022-02-22T13:18:12+08:00",
            "date_modified": "2022-02-23T15:14:16+08:00"
        },
        {
            "id": "https://nanoc.work/nginx-wei-jing-tai/",
            "url": "https://nanoc.work/nginx-wei-jing-tai/",
            "title": "Nginx 伪静态",
            "summary": "入门 您需要了解以下知识 使 /public/a.php?b=test 变为 /public/a-test.json location ~ ^(.*)/public/a-(.*)\\.json { rewrite /public/a-(.*).json /public/a.php?b=$1 last; } 文档 https://www.cnblogs.com/kevingrace/p/10393234.html",
            "content_html": "<h2 id=\"入门\">入门</h2>\n<p>您需要了解以下知识</p>\n<ul>\n<li>正则表达式</li>\n<li>Nginx 配置文件</li>\n</ul>\n<h2 id=\"实例\">实例</h2>\n<p>使 /public/a.php?b=test 变为 /public/a-test.json</p>\n<pre><code>location ~ ^(.*)/public/a-(.*)\\.json  {\n  rewrite /public/a-(.*).json /public/a.php?b=$1 last;\n}\n</code></pre>\n<h2 id=\"文档\">文档</h2>\n<blockquote>\n<p><a href=\"https://www.cnblogs.com/kevingrace/p/10393234.html\">https://www.cnblogs.com/kevingrace/p/10393234.html</a></p>\n</blockquote>\n",
            "author": {
                "name": "Nanoc"
            },
            "tags": [
                   "Nginx"
            ],
            "date_published": "2022-02-18T17:33:08+08:00",
            "date_modified": "2022-02-18T18:15:32+08:00"
        }
    ]
}
