<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <title>Nanoc</title>
    <link href="https://nanoc.work/feed.xml" rel="self" />
    <link href="https://nanoc.work" />
    <updated>2022-02-26T12:28:41+08:00</updated>
    <author>
        <name>Nanoc</name>
    </author>
    <id>https://nanoc.work</id>

    <entry>
        <title>Github Action Self hosted 配置问题</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/github-action-self-hosted-pei-zhi-wen-ti/"/>
        <id>https://nanoc.work/github-action-self-hosted-pei-zhi-wen-ti/</id>
            <category term="Linux"/>

        <updated>2022-02-26T12:28:41+08:00</updated>
            <summary>
                <![CDATA[
                    Must not run with sudo 修改 ./config.sh 内容 vi ./config.sh 删除这部分 if [ $user_id -eq 0 -a -z &quot;$AGENT_ALLOW_RUNASROOT&quot; ]; then echo &quot;Must not run with sudo&quot; exit 1 fi 或者在命令前部添加： RUNNER_ALLOW_RUNASROOT=&quot;1&quot; 参考 https://stackoverflow.com/questions/66085793/must-not-run-with-sudo# https://www.cnblogs.com/mingyanzhen/p/11361207.html https://bit.ly/3IqkOKW 参考 https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/ https://github.com/actions/setup-python/issues/92 https://github.com/actions/setup-python/issues/96 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="must-not-run-with-sudo">Must not run with sudo</h2>
<blockquote>
<p>修改 ./config.sh 内容</p>
</blockquote>
<pre><code>vi ./config.sh
</code></pre>
<p>删除这部分</p>
<pre><code>if [ $user_id -eq 0 -a -z &quot;$AGENT_ALLOW_RUNASROOT&quot; ]; then
    echo &quot;Must not run with sudo&quot;
    exit 1
fi
</code></pre>
<p>或者在命令前部添加：</p>
<pre><code>RUNNER_ALLOW_RUNASROOT=&quot;1&quot; 
</code></pre>
<p>参考</p>
<blockquote>
<p><a href="https://stackoverflow.com/questions/66085793/must-not-run-with-sudo#">https://stackoverflow.com/questions/66085793/must-not-run-with-sudo#</a>
<a href="https://www.cnblogs.com/mingyanzhen/p/11361207.html">https://www.cnblogs.com/mingyanzhen/p/11361207.html</a>
<a href="https://bit.ly/3IqkOKW">https://bit.ly/3IqkOKW</a></p>
</blockquote>
<h2 id="version-3x-with-arch-x64-not-found">Version 3.x with arch x64 not found</h2>
<p>参考</p>
<blockquote>
<p><a href="https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/">https://dev.classmethod.jp/articles/setup-python-on-self-hosted-runner/</a><br><a href="https://github.com/actions/setup-python/issues/92">https://github.com/actions/setup-python/issues/92</a><br><a href="https://github.com/actions/setup-python/issues/96">https://github.com/actions/setup-python/issues/96</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Github Action 执行完毕GIT到仓库</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/github-action-zhi-xing-wan-bi-gitdao-cang-ku/"/>
        <id>https://nanoc.work/github-action-zhi-xing-wan-bi-gitdao-cang-ku/</id>
            <category term="Github"/>

        <updated>2022-02-23T16:49:04+08:00</updated>
            <summary>
                <![CDATA[
                    公开仓库 - uses: actions/checkout@v2 with: ref: main token: ${{ secrets.token }} 若是私人仓库 你需要先创建属于你的github token，并设置为Actions secrets。 然后这样使用 - uses: actions/checkout@v2 with: ref: main token: ${{ secrets.token }} 当程序执行完毕 若文件已经更改，这样可以GIT到仓库 - name: Commit files uses: stefanzweifel/git-auto-commit-action@v4 with: commit_message: Action Commit push_options: --force 完整示例 name: &#39;test&#39; on: #&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="公开仓库">公开仓库</h2>
<pre><code>      - uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.token }}
</code></pre>
<h2 id="若是私人仓库">若是私人仓库</h2>
<p>你需要先创建属于你的github token，并设置为Actions secrets。
然后这样使用</p>
<pre><code>      - uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.token }}
</code></pre>
<h2 id="当程序执行完毕">当程序执行完毕</h2>
<p>若文件已经更改，这样可以GIT到仓库</p>
<pre><code>      - name: Commit files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Action Commit
          push_options: --force
</code></pre>
<h2 id="完整示例">完整示例</h2>
<pre><code>name: &#39;test&#39;
on:
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  schedule:
    - cron: &#39;0 */3 * * *&#39;
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
          token: ${{ secrets.token }}
      - name: Setup Python
        uses: actions/setup-python@v2
      - name: Run Python
        run: python test.py
      - name: Commit files
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          commit_message: Action Commit
          push_options: --force
</code></pre>
<h2 id="文档">文档</h2>
<blockquote>
<p><a href="https://github.com/stefanzweifel/git-auto-commit-action">https://github.com/stefanzweifel/git-auto-commit-action</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Python Telegram 库</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/python-telegram-ku/"/>
        <id>https://nanoc.work/python-telegram-ku/</id>
            <category term="Python"/>

        <updated>2022-02-23T15:22:19+08:00</updated>
            <summary>
                <![CDATA[
                    Python html to telegra.ph poster https://pypi.org/project/html-telegraph-poster/ Simple python function to post plain html text to https://telegra.ph/. Telegra.ph allows &lt;a&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;em&gt;, &lt;figure&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;img&gt;, &lt;p&gt;, &lt;strong&gt;, elements. It also supports embedded youtube and vimeo iframe tags. 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="python-html-to-telegraph-poster">Python html to telegra.ph poster</h2>
<blockquote>
<p><a href="https://pypi.org/project/html-telegraph-poster/">https://pypi.org/project/html-telegraph-poster/</a></p>
</blockquote>
<pre><code>Simple python function to post plain html text to https://telegra.ph/. Telegra.ph allows &lt;a&gt;, &lt;blockquote&gt;, &lt;br&gt;, &lt;em&gt;, &lt;figure&gt;, &lt;h3&gt;, &lt;h4&gt;, &lt;img&gt;, &lt;p&gt;, &lt;strong&gt;, elements. It also supports embedded youtube and vimeo iframe tags.
</code></pre>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Python 网盘分享下载库</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/python-wang-pan-fen-xiang-xia-zai-ku/"/>
        <id>https://nanoc.work/python-wang-pan-fen-xiang-xia-zai-ku/</id>
            <category term="Python"/>

        <updated>2022-02-23T15:14:16+08:00</updated>
            <summary>
                <![CDATA[
                    Only ondrive https://pypi.org/project/onedrivedownloader/ https://pypi.org/project/cloud-downloader-equitania/ 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="only-ondrive">Only ondrive</h2>
<blockquote>
<p><a href="https://pypi.org/project/onedrivedownloader/">https://pypi.org/project/onedrivedownloader/</a></p>
</blockquote>
<h2 id="onedrive-and-others">Onedrive and others</h2>
<blockquote>
<p><a href="https://pypi.org/project/cloud-downloader-equitania/">https://pypi.org/project/cloud-downloader-equitania/</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Nginx 伪静态</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/nginx-wei-jing-tai/"/>
        <id>https://nanoc.work/nginx-wei-jing-tai/</id>
            <category term="Nginx"/>

        <updated>2022-02-18T18:15:32+08:00</updated>
            <summary>
                <![CDATA[
                    入门 您需要了解以下知识 使 /public/a.php?b=test 变为 /public/a-test.json location ~ ^(.*)/public/a-(.*)\.json { rewrite /public/a-(.*).json /public/a.php?b=$1 last; } 文档 https://www.cnblogs.com/kevingrace/p/10393234.html 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="入门">入门</h2>
<p>您需要了解以下知识</p>
<ul>
<li>正则表达式</li>
<li>Nginx 配置文件</li>
</ul>
<h2 id="实例">实例</h2>
<p>使 /public/a.php?b=test 变为 /public/a-test.json</p>
<pre><code>location ~ ^(.*)/public/a-(.*)\.json  {
  rewrite /public/a-(.*).json /public/a.php?b=$1 last;
}
</code></pre>
<h2 id="文档">文档</h2>
<blockquote>
<p><a href="https://www.cnblogs.com/kevingrace/p/10393234.html">https://www.cnblogs.com/kevingrace/p/10393234.html</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>v2rayN Mux多路复用</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/v2rayn-muxduo-lu-fu-yong/"/>
        <id>https://nanoc.work/v2rayn-muxduo-lu-fu-yong/</id>
            <category term="Others"/>

        <updated>2022-02-10T13:17:40+08:00</updated>
            <summary>
                <![CDATA[
                    Mux多路复用 顾名思义，Mux功能可将多个TCP连接合并为一个TCP连接，以减少TCP握手延迟，但此种方法并不能提高吞吐量，即不会突破原始链路最大速率，适用于高延迟丢包线路，正常线路不建议开，会降低代理稳定性。 Mux只需要在客户端启用， 服务器端自适应。 https://www.v2ray.com/chapter_02/mux.html https://www.v2ray.com/developer/protocols/muxcool.html 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="mux多路复用">Mux多路复用</h2>
<p>顾名思义，Mux功能可将多个TCP连接合并为一个TCP连接，以减少TCP握手延迟，但此种方法并不能提高吞吐量，即不会突破原始链路最大速率，适用于高延迟丢包线路，正常线路不建议开，会降低代理稳定性。
Mux只需要在客户端启用， 服务器端自适应。</p>
<blockquote>
<p><a href="https://www.v2ray.com/chapter_02/mux.html">https://www.v2ray.com/chapter_02/mux.html</a>
<a href="https://www.v2ray.com/developer/protocols/muxcool.html">https://www.v2ray.com/developer/protocols/muxcool.html</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Raw Manga Website</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/raw-manga-website/"/>
        <id>https://nanoc.work/raw-manga-website/</id>
            <category term="Others"/>

        <updated>2022-02-08T17:50:33+08:00</updated>
            <summary>
                <![CDATA[
                    Raw manga You can find raw manga from the websites: https://klmag.net/index https://neatmanga.com/ 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="raw-manga">Raw manga</h2>
<p>You can find raw manga from the websites:</p>
<blockquote>
<p><a href="https://klmag.net/index">https://klmag.net/index</a><br><a href="https://neatmanga.com/">https://neatmanga.com/</a></p>
</blockquote>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Python Request Timeout</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/python-request/"/>
        <id>https://nanoc.work/python-request/</id>
            <category term="Python"/>

        <updated>2022-02-08T17:50:26+08:00</updated>
            <summary>
                <![CDATA[
                    Source You can find more data from URLs: https://github.com/psf/requests https://docs.python-requests.org/en/latest/ https://pypi.org/project/requests/ pip install requests or pip3 install requests In the event of a network problem (e.g. DNS failure, refused connection, etc), Requests will raise a ConnectionError exception. Response.raise_for_status() will raise an HTTPError if the HTTP&hellip;
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="source">Source</h2>
<p>You can find more data from URLs:</p>
<blockquote>
<p><a href="https://github.com/psf/requests">https://github.com/psf/requests</a><br><a href="https://docs.python-requests.org/en/latest/">https://docs.python-requests.org/en/latest/</a>
<a href="https://pypi.org/project/requests/">https://pypi.org/project/requests/</a></p>
</blockquote>
<h2 id="install">Install</h2>
<p>pip install requests
or
pip3 install requests</p>
<h2 id="errors-and-exceptions">Errors and Exceptions</h2>
<blockquote>
<p>In the event of a network problem (e.g. DNS failure, refused connection, etc), Requests will raise a ConnectionError exception.</p>
</blockquote>
<blockquote>
<p>Response.raise_for_status() will raise an HTTPError if the HTTP request returned an unsuccessful status code.</p>
</blockquote>
<blockquote>
<p>If a request times out, a Timeout exception is raised.</p>
</blockquote>
<blockquote>
<p>If a request exceeds the configured number of maximum redirections, a TooManyRedirects exception is raised.</p>
</blockquote>
<blockquote>
<p>All exceptions that Requests explicitly raises inherit from requests.exceptions.RequestException.</p>
</blockquote>
<h2 id="make-timeout">Make Timeout</h2>
<p>So we can set the timeout as follows:</p>
<pre><code class="language-python">try:
    response = requests.get(url,timeout=2)
except requests.exceptions.RequestException as e:
    function()
</code></pre>

            ]]>
        </content>
    </entry>
    <entry>
        <title>AMH面板路径</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/amhmian-ban-lu-jing/"/>
        <id>https://nanoc.work/amhmian-ban-lu-jing/</id>
            <category term="Linux"/>

        <updated>2022-02-08T16:40:30+08:00</updated>
            <summary>
                <![CDATA[
                    Python连接数据库 路径位于/tmp/mysql*.sock 例：unix_socket=’/tmp/mysql-5.6.sock’ /home/wwwroot/ vhost中包含了不同站点Nginx的配置文件 /usr/local/bin /usr/local/redis-6.2/bin/redis-cli 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="python连接数据库">Python连接数据库</h2>
<p>路径位于/tmp/mysql*.sock
例：unix_socket=’/tmp/mysql-5.6.sock’</p>
<h2 id="运行环境配置路径">运行环境配置路径</h2>
<p>/home/wwwroot/
vhost中包含了不同站点Nginx的配置文件</p>
<h2 id="软件配置">软件配置</h2>
<p>/usr/local/bin</p>
<h2 id="reids客户端路径">Reids客户端路径</h2>
<p>/usr/local/redis-6.2/bin/redis-cli</p>

            ]]>
        </content>
    </entry>
    <entry>
        <title>Linux 服务器面板汇总</title>
        <author>
            <name>Nanoc</name>
        </author>
        <link href="https://nanoc.work/linux-fu-wu-qi-mian-ban-hui-zong-2/"/>
        <id>https://nanoc.work/linux-fu-wu-qi-mian-ban-hui-zong-2/</id>
            <category term="Linux"/>

        <updated>2022-02-06T22:54:47+08:00</updated>
            <summary>
                <![CDATA[
                    用途 这里主要指提供Web Server环境快速部署，以快速上线PHP项目，并提供优质的性能体验，或降低开站门槛提供完整的建站体验。 快速部署LNMP、LAMP 提供 Let’s Encrypt 证书或自由证书启用HTTPS 隐藏了部分技术细节对新手友好 以下将列举我所使用过的几个产品。 国内 名字 描述 宝塔 为Python所编写，提供免费版，适合所有人 AMH面板 起始2011年，但UI较难懂，适合具有一定经验 国外 名字 描述 cyberpanel 使用Openlitespeed，UI简洁，提供免费版，完整的DNS和邮局体验 Vesta 提供LNMP、LAMP，邮箱，DNS 
                ]]>
            </summary>
        <content type="html">
            <![CDATA[
                <h2 id="用途">用途</h2>
<p>这里主要指提供Web Server环境快速部署，以快速上线PHP项目，并提供优质的性能体验，或降低开站门槛提供完整的建站体验。</p>
<ul>
<li>快速部署LNMP、LAMP</li>
<li>提供 Let’s Encrypt 证书或自由证书启用HTTPS</li>
<li>隐藏了部分技术细节对新手友好
以下将列举我所使用过的几个产品。</li>
</ul>
<!-- more -->

<h2 id="国内">国内</h2>
<table>
<thead>
<tr>
<th>名字</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>宝塔</td>
<td>为Python所编写，提供免费版，适合所有人</td>
</tr>
<tr>
<td>AMH面板</td>
<td>起始2011年，但UI较难懂，适合具有一定经验</td>
</tr>
</tbody></table>
<h2 id="国外">国外</h2>
<table>
<thead>
<tr>
<th>名字</th>
<th>描述</th>
</tr>
</thead>
<tbody><tr>
<td>cyberpanel</td>
<td>使用Openlitespeed，UI简洁，提供免费版，完整的DNS和邮局体验</td>
</tr>
<tr>
<td>Vesta</td>
<td>提供LNMP、LAMP，邮箱，DNS</td>
</tr>
</tbody></table>

            ]]>
        </content>
    </entry>
</feed>
